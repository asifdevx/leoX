"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/reducer/nftSlice.ts":
/*!*********************************!*\
  !*** ./src/reducer/nftSlice.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNFT: function() { return /* binding */ createNFT; },\n/* harmony export */   fetchNFTs: function() { return /* binding */ fetchNFTs; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var dotenv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dotenv */ \"./node_modules/dotenv/lib/main.js\");\n/* harmony import */ var dotenv__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dotenv__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @reduxjs/toolkit */ \"./node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs\");\n/* harmony import */ var _components_ABI_abi_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/ABI/abi.json */ \"./src/components/ABI/abi.json\");\n\n\n\n\n\ndotenv__WEBPACK_IMPORTED_MODULE_0___default().config();\nconst CONTRACT_ADDRESS = \"0x8Ef4476E5Ed07dFC9eCA640106F00841F89F5e97\";\nconst createEthContract = async ()=>{\n    console.log(\"Contract Address:\", CONTRACT_ADDRESS);\n    if (!window.ethereum) {\n        console.error(\"MetaMask not detected.\");\n        return;\n    }\n    const provider = new ethers__WEBPACK_IMPORTED_MODULE_2__.BrowserProvider(window.ethereum);\n    const signer = await provider.getSigner();\n    const contract = new ethers__WEBPACK_IMPORTED_MODULE_2__.Contract(CONTRACT_ADDRESS, _components_ABI_abi_json__WEBPACK_IMPORTED_MODULE_1__, signer);\n    console.log(await (contract === null || contract === void 0 ? void 0 : contract.getListPrice()));\n    console.log(await (contract === null || contract === void 0 ? void 0 : contract.getCurrentToken()));\n    return contract;\n};\nconst createNFT = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__.createAsyncThunk)(\"nft/createNFT\", async (param)=>{\n    let { tokenURI, price } = param;\n    const contract = await createEthContract();\n    const listprice = await (contract === null || contract === void 0 ? void 0 : contract.getListPrice());\n    const tx = await (contract === null || contract === void 0 ? void 0 : contract.createToken(tokenURI, ethers__WEBPACK_IMPORTED_MODULE_2__.parseEther(price.toString()), {\n        value: listprice,\n        gasLimit: 3000000\n    }));\n    await tx.wait();\n    console.log(\"List Price:\", ethers__WEBPACK_IMPORTED_MODULE_2__.formatEther(listprice));\n    console.log(\"Token URI:\", tokenURI);\n    console.log(\"Price:\", ethers__WEBPACK_IMPORTED_MODULE_2__.parseEther(price.toString()));\n    console.log(\"step 1\");\n    return {\n        success: true\n    };\n});\nconst fetchNFTs = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__.createAsyncThunk)(\"nft/fetchNFTs\", async ()=>{\n    const contract = await createEthContract();\n    const nftsRaw = await (contract === null || contract === void 0 ? void 0 : contract.getAllNfts());\n    console.log(\"Raw NFTs Data:\", nftsRaw);\n    if (!nftsRaw) return [];\n    const nftsArray = Array.from(nftsRaw);\n    console.log(\"nftsArray Data:\", nftsArray);\n    const tokens = await Promise.all(nftsArray.map(async (nft)=>{\n        const tokenId = nft[0].toString();\n        console.log(\"tokenId\", tokenId);\n        let metadata = {\n            name: \"\",\n            description: \"\",\n            image: \"\"\n        };\n        try {\n            const tokenURI = await (contract === null || contract === void 0 ? void 0 : contract.tokenURI(tokenId));\n            const metaRes = await axios__WEBPACK_IMPORTED_MODULE_4__[\"default\"].get(\"https://gateway.pinata.cloud/ipfs/\".concat(tokenURI.replace(\"ipfs://\", \"\")));\n            console.log(\"tokenURI\", tokenURI);\n            console.log(\"metaRes\", metaRes);\n            metadata = metaRes.data;\n        } catch (error) {\n            const tokenURI = await (contract === null || contract === void 0 ? void 0 : contract.tokenURI(tokenId));\n            console.log(\"tokenURI\", tokenURI);\n            console.error(\"Error fetching metadata for token\", tokenId, error);\n        }\n        return {\n            tokenId,\n            name: metadata.name || \"Token #\".concat(tokenId),\n            description: metadata.description || \"No description available\",\n            image: \"https://gateway.pinata.cloud/ipfs/\".concat(metadata.image.replace(\"ipfs://\", \"\")) || 0,\n            price: ethers__WEBPACK_IMPORTED_MODULE_2__.formatEther(nft[3]),\n            owner: nft[1],\n            seller: nft[2],\n            isSold: nft[4]\n        };\n    }));\n    console.log(\"Formatted NFTs:\", tokens);\n    return tokens;\n});\nconst initialState = {\n    nfts: [],\n    loading: false\n};\nconst nftSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__.createSlice)({\n    name: \"nft\",\n    initialState,\n    reducers: {},\n    extraReducers (builder) {\n        builder.addCase(createNFT.pending, (state)=>{\n            state.loading = true;\n        }).addCase(createNFT.fulfilled, (state)=>{\n            state.loading = false;\n        }).addCase(fetchNFTs.fulfilled, (state, action)=>{\n            state.nfts = action.payload;\n        });\n    }\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (nftSlice.reducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/reducer/nftSlice.ts\n"));

/***/ })

});